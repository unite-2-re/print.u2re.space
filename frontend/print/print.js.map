{"version":3,"file":"print.js","sources":["../../../../src/$solid$/Utils.tsx","../../../../src/$solid$/Main.tsx","../../../../src/css.ts","../../../../src/app.ts"],"sourcesContent":["// @ts-ignore\nimport { onMount } from \"solid-js\";\n\n// @ts-ignore\nimport {observeAttribute} from \"/externals/lib/dom.js\";\n\n//\nexport const refAndMount = (cb)=>{\n    return (element)=>{\n        cb(element);\n        onMount(()=>cb(element));\n    }\n}\n\n//\nexport const observe = (val) => {\n    return (el)=> {\n        const [attr, setter] = val;\n        observeAttribute(el, attr, (obs)=>setter(el.getAttribute(attr)));\n    }\n}\n\n//\nexport const logged = (fx)=>{\n    return (...args)=>{\n        console.log(...args);\n        return fx(...args);\n    }\n}\n\n//\nconst hookHandle = {\n    apply(target, thisArg, argumentsList) {\n        target.target = argumentsList?.[0] ?? target.target;\n    },\n    set(target, name, value) {\n        return target.target ? Reflect.set(target.target, name, value) : true;\n    },\n    get(target, name, receiver) {\n        if (name == \"@target\") { return target.target; };\n        return target.target ? Reflect.get(target.target, name) : null;\n    },\n    has(target, name) {\n        return target.target ? Reflect.has(target.target, name) : false;\n    },\n    ownKeys(target) {\n        return target.target ? Reflect.ownKeys(target.target) : [];\n    }\n};\n\n//\nexport const hooked = (target = null)=>{\n    const fx = ()=>{};\n    fx.target = target;\n    return new Proxy(fx, hookHandle);\n};\n\n//\nconst getterHandle = {\n    apply(target, thisArg, argumentsList) {\n        return target?.();//Reflect.apply(target?.(), thisArg, argumentsList);\n    },\n    set(target, name, value) {\n        return Reflect.set(target?.(), name, value);\n    },\n    get(target, name, receiver) {\n        if (name == \"@target\") { return target?.(); };\n        return Reflect.get(target?.(), name, receiver);\n    },\n    has(target, name) {\n        return Reflect.has(target?.(), name);\n    },\n    ownKeys(target) {\n        return Reflect.ownKeys(target?.());\n    }\n};\n\n//\nexport const getter = (target = null)=>{\n    return new Proxy(target, getterHandle);\n};\n","// @ts-ignore\r\nimport { For } from \"solid-js\";\r\nimport { render } from \"solid-js/web\";\r\nimport html from \"solid-js/html\";\r\nimport { hooked } from \"./Utils\"\r\nimport { marked } from \"marked\";\r\n\r\n// @ts-ignore\r\nimport { observeContentBox } from \"/externals/lib/dom.js\";\r\n\r\n\r\n\r\n//\r\nexport const getDir = (dest)=>{\r\n    if (typeof dest != \"string\") return dest;\r\n\r\n    //\r\n    dest = dest?.trim?.() || dest;\r\n    if (!dest?.endsWith?.(\"/\")) { dest = dest?.trim?.()?.split?.(\"/\")?.slice(0, -1)?.join?.(\"/\")?.trim?.() || dest; };\r\n    const p1 = !dest?.trim()?.endsWith(\"/\") ? (dest+\"/\") : dest;\r\n    return (!p1?.startsWith(\"/\") ? (\"/\"+p1) : p1);\r\n}\r\n\r\n//\r\nconst $useFS$ = async() => {\r\n    // @ts-ignore\r\n    const opfs = await import(/*@vite-ignore */ '/externals/vendor/happy-opfs.mjs').catch(console.warn.bind(console));\r\n\r\n    // @ts-ignore\r\n    const deno = typeof Deno != \"undefined\" ? Deno : null;\r\n\r\n    /* @vite-ignore */\r\n    const ignore = \"\" + \"\";\r\n    /* @vite-ignore */\r\n    let node = null;\r\n    if (!opfs?.isOPFSSupported?.()) {\r\n        try {\r\n            node = await import(/*@vite-ignore */ ignore + \"node:fs/promises\").catch(console.warn.bind(console));\r\n        } catch(e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n\r\n    //\r\n    const fs = opfs?.isOPFSSupported?.() ? opfs : (deno ?? node ?? opfs);\r\n    return fs;\r\n}\r\n\r\n//\r\nlet currentFS: any = null;\r\nexport const useFS = ()=>{ return (currentFS ??= $useFS$()); };\r\nexport const provide = async (req: string | Request = \"\", rw = false) => {\r\n    const url: string = (req as Request)?.url ?? req;\r\n    const path = getDir(url?.replace?.(location.origin, \"\")?.trim?.());\r\n    const fn   = url?.split(\"/\")?.at?.(-1);\r\n\r\n    //\r\n    if (!URL.canParse(url) && path?.trim()?.startsWith?.(\"/user\")) {\r\n        const fs = await useFS();\r\n        const $path = path?.replace?.(\"/user/\", \"\")?.trim?.();\r\n        const clean = (($path?.split?.(\"/\") || [$path])?.filter?.((p)=>!!p?.trim?.()) || [\"\"])?.join?.(\"/\") || \"\";\r\n        const npt = ((clean && clean != \"/\") ? \"/\" + clean + \"/\" : clean) || \"/\";\r\n\r\n        //\r\n        if (npt && npt != \"/\") { await fs?.mkdir?.(npt); };\r\n        if (rw) {\r\n            return {\r\n                write(data) {\r\n                    return fs?.writeFile?.(npt + fn, data);\r\n                }\r\n            }\r\n        }\r\n\r\n        //\r\n        const handle = await fs?.readFile?.(npt + fn, {encoding: \"blob\"});\r\n\r\n        //\r\n        let file = null;\r\n        try { file = handle?.unwrap?.() ?? handle; } catch(e) {};\r\n        return file;\r\n    } else {\r\n        return fetch(req).then(async (r) => {\r\n            const blob = await r.blob();\r\n            const lastModified = Date.parse(r.headers.get(\"Last-Modified\") || \"\") || 0;\r\n            return new File([blob], url.substring(url.lastIndexOf('/') + 1), {\r\n                type: blob.type,\r\n                lastModified\r\n            });\r\n        });\r\n    }\r\n    return null;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// while: tab.component should be  ()=> html`...`\r\nexport const Workspace = () => {\r\n    const markdown = hooked(null);\r\n\r\n    //\r\n    const requestFileAccess = async (dest = \"/user/temp/\", current?: any)=>{\r\n        const $e = \"showOpenFilePicker\";\r\n\r\n        // @ts-ignore\r\n        const showOpenFilePicker = window?.[$e]?.bind?.(window) ?? (await import(\"/externals/polyfill/showOpenFilePicker.mjs\"))?.[$e];\r\n        return showOpenFilePicker({\r\n            types: [\r\n                {\r\n                    description: \"wallpaper\",\r\n                    accept: {\r\n                        \"text/*\": [\".md\"],\r\n                    },\r\n                },\r\n            ],\r\n            multiple: false,\r\n        })?.then?.(async ([handle] = [])=>{\r\n            const file = await handle?.getFile?.();\r\n            loadMarkdown(file);\r\n        });\r\n    }\r\n\r\n\r\n    //\r\n    const dragOverHandle = (ev)=>{\r\n        ev?.preventDefault?.();\r\n    }\r\n\r\n    //\r\n    const loadMarkdown = async (file: string|File|Blob|Response)=>{\r\n        renderMarkdown(file);\r\n        if (file instanceof File || file instanceof Blob) {\r\n            (await provide(\"/user/temp/view.md\", true) as any)?.write?.(file);\r\n        };\r\n    }\r\n\r\n    //\r\n    const dropHandle = (ev)=>{\r\n        ev?.preventDefault?.();\r\n        const file = ev?.dataTransfer?.files?.[0];\r\n        if (file) loadMarkdown(file);\r\n    }\r\n\r\n    //\r\n    document.addEventListener(\"ext-set-md\", (ev)=>{\r\n        loadMarkdown(ev?.detail?.doc);\r\n    });\r\n\r\n    //\r\n    const renderMarkdown = (file: string|File|Blob|Response)=>{\r\n        if (typeof file == \"string\") {\r\n            markdown.innerHTML = marked(file) || markdown.innerHTML;\r\n        } else \r\n        if (file instanceof File || file instanceof Blob || file instanceof Response) {\r\n            file?.text()?.then?.((doc)=>markdown.innerHTML = marked(doc) || markdown.innerHTML);\r\n        }\r\n    }\r\n\r\n    //\r\n    const contentBox = (element)=>{\r\n        observeContentBox(element, (box)=>{\r\n            element.style.setProperty(\"--fit-width\", Math.min((box.inlineSize - 64), 1200) || 800);\r\n        });\r\n    }\r\n\r\n    //\r\n    const preload = ()=>{\r\n        requestIdleCallback(async ()=>{\r\n            const file: any = await provide(\"/user/temp/view.md\");\r\n            if (file) renderMarkdown(file);\r\n        });\r\n    }\r\n\r\n    //\r\n    return html`<>\r\n        <nav>\r\n            <div class=\"row\">\r\n                <button data-highlight=\"2\" data-highlight-hover=\"3\" class=\"open-file\" on:click=${()=>requestFileAccess()}><ui-icon icon=\"notebook-text\"></ui-icon></button>\r\n            </div>\r\n            <div class=\"row\">\r\n                \r\n            </div>\r\n        </nav>\r\n        <main ref=${contentBox} data-print-pass data-scheme=\"solid\" data-theme=\"light\" on:drop=${dropHandle} on:dragover=${dragOverHandle}>\r\n            <div ref=${preload} ref=${markdown} data-print id=\"markdown\" ></div>\r\n        </main>\r\n    </>`;\r\n};\r\n\r\n//\r\nexport default Workspace;\r\nexport const renderInPage = (root: HTMLElement/*, tasks: any*/)=>{\r\n    render(()=>html`<${Workspace}><//>`, root);\r\n}\r\n","// @ts-ignore\nimport styles from \"./css.scss?inline&compress\";\n\n//\nconst OWNER = \"adl\";\n\n//\nconst setStyleURL = (base: [any, any], url: string)=>{\n    //\n    if (base[1] == \"innerHTML\") {\n        base[0][base[1]] = `@import url(\"${url}\");`;\n    } else {\n        base[0][base[1]] = url;\n    }\n}\n\n//\nconst hash = async (string: string) => {\n    const hashBuffer = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(string));\n    return \"sha256-\" + btoa(String.fromCharCode.apply(null, new Uint8Array(hashBuffer) as unknown as number[]));\n}\n\n//\nconst loadStyleSheet = async (inline: string, base?: [any, any], integrity?: string|Promise<string>)=>{\n    const url = URL.canParse(inline) ? inline : URL.createObjectURL(new Blob([inline], {type: \"text/css\"}));\n    if (base?.[0] && (!URL.canParse(inline) || integrity) && base?.[0] instanceof HTMLLinkElement) {\n        const I: any = (integrity ?? hash(inline));\n        if (typeof I?.then == \"function\") {\n            I?.then?.((H)=>base?.[0]?.setAttribute?.(\"integrity\", H));\n        } else {\n            base?.[0]?.setAttribute?.(\"integrity\", I as string);\n        }\n    }\n    if (base) setStyleURL(base, url);\n}\n\n//\nconst preInit = URL.createObjectURL(new Blob([styles], {type: \"text/css\"}));\nconst integrity = hash(styles);\n\n//\nexport const styleCode = {preInit, integrity, styles};\n\n//\nconst loadBlobStyle = (inline: string, integrity?: string|Promise<string>)=>{\n    const style = document.createElement(\"link\");\n    style.rel = \"stylesheet\";\n    style.type = \"text/css\";\n    style.crossOrigin = \"same-origin\";\n    style.dataset.owner = OWNER;\n    loadStyleSheet(inline, [style, \"href\"], integrity);\n    document.head.appendChild(style);\n    return style;\n}\n\n//\nconst loadInlineStyle = (inline: string, rootElement = document.head, $integrity = integrity)=>{\n    const PLACE = (rootElement?.querySelector?.(\"head\") ?? rootElement) as HTMLElement;\n    if (PLACE instanceof HTMLHeadElement) { return loadBlobStyle(inline); }\n\n    //\n    const style = document.createElement(\"style\");\n    style.dataset.owner = OWNER;\n    loadStyleSheet(inline, [style, \"innerHTML\"], $integrity);\n    PLACE?.appendChild?.(style);\n    return style;\n}\n\n//\nconst initialize = (rootElement = document.head)=>{\n    loadInlineStyle(preInit, rootElement);\n}\n\n//\nexport default initialize;\n","//\r\nimport { renderInPage } from \"./$solid$/Main\";\r\nimport CSS from \"./css\";\r\n\r\n// @ts-ignore\r\nimport { observeBySelector } from \"/externals/lib/dom.js\";\r\n\r\n//\r\nexport const initialize = async (root)=>{\r\n\r\n    //\r\n    const OpenSans = new FontFace(\"Open Sans\", \"url(\\\"/assets/fonts/OpenSans-VariableFont_wdth,wght.ttf\\\")\", {\r\n    });\r\n    const OpenSansItalic = new FontFace(\"Open Sans Italic\", \"url(\\\"/assets/fonts/OpenSans-Italic-VariableFont_wdth,wght.ttf\\\")\", {\r\n    });\r\n\r\n    //\r\n    const SourceSans3 = new FontFace(\"Source Sans 3\", \"url(\\\"/assets/fonts/SourceSans3-VariableFont_wght.ttf\\\")\", {\r\n    });\r\n    const SourceSansItalic3 = new FontFace(\"Source Sans 3 Italic\", \"url(\\\"/assets/fonts/SourceSans3-Italic-VariableFont_wght.ttf\\\")\", {\r\n    });\r\n\r\n    // @ts-ignore\r\n    document.fonts?.add?.(OpenSans);\r\n\r\n    // @ts-ignore\r\n    document.fonts?.add?.(OpenSansItalic);\r\n\r\n    // @ts-ignore\r\n    document.fonts?.add?.(SourceSans3);\r\n\r\n    // @ts-ignore\r\n    document.fonts?.add?.(SourceSansItalic3);\r\n\r\n    //\r\n    const loadingModules = Promise.allSettled([\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/core/agate.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/core/core.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/core/theme.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/core/grid.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/core/design.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/core/existence.js\"),\r\n\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/wcomp/ui.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/wcomp/longtext.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/wcomp/rows.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/wcomp/scrollbox.js\"),\r\n        // @ts-ignore\r\n        import(/* @vite-ignore */ \"/externals/wcomp/image.js\"),\r\n    ]);\r\n\r\n    //\r\n    await Promise.allSettled([\r\n        CSS?.(root),\r\n        loadingModules?.then?.((mds)=>Promise.allSettled(mds.map((rs: any)=> Promise.try(rs?.value?.default))))?.catch?.(console.warn.bind(console))\r\n    ]);\r\n\r\n    //\r\n    renderInPage(root);\r\n}\r\n\r\n//\r\nconst whenError = (ev)=>{\r\n    const element = ev?.target;\r\n    if (element?.matches?.(\"img:not(.error)\")) {\r\n        element?.classList?.add(\"error\");\r\n    }\r\n}\r\n\r\n//\r\nconst whenLoad = (ev)=>{\r\n    const element = ev?.target;\r\n    if (element?.matches?.(\"img.error\")) {\r\n        element?.classList?.remove(\"error\");\r\n    }\r\n}\r\n\r\n//\r\ndocument.documentElement.addEventListener(\"error\", whenError);\r\n\r\n//\r\nobserveBySelector(document.documentElement, \"img:not(.error)\", (mut)=>{\r\n    mut?.addedNodes?.forEach?.((el)=>{\r\n        if (!el.complete) { el?.classList?.add(\"error\"); };\r\n        el?.addEventListener?.(\"error\", whenError);\r\n        el?.addEventListener?.(\"load\", whenLoad);\r\n    });\r\n});\r\n\r\n//\r\nobserveBySelector(document.documentElement, \"img.error, img\", (mut)=>{\r\n    mut?.addedNodes?.forEach?.((el)=>{\r\n        if (el.complete) { el?.classList?.remove(\"error\"); };\r\n        el?.addEventListener?.(\"error\", whenError);\r\n        el?.addEventListener?.(\"load\", whenLoad);\r\n    });\r\n});\r\n\r\n//\r\nexport default initialize;\r\n"],"names":["render","html","marked","observeContentBox","observeBySelector","hookHandle","apply","target","thisArg","argumentsList","set","name","value","Reflect","get","receiver","has","ownKeys","currentFS","provide","async","req","rw","url","path","dest","trim","endsWith","split","slice","join","p1","startsWith","getDir","replace","location","origin","fn","at","URL","canParse","fs","opfs","import","catch","console","warn","bind","deno","Deno","node","isOPFSSupported","e","$useFS$","$path","clean","filter","p","npt","mkdir","write","data","writeFile","handle","readFile","encoding","file","unwrap","fetch","then","r","blob","lastModified","Date","parse","headers","File","substring","lastIndexOf","type","Workspace","markdown","hooked","fx","Proxy","loadMarkdown","renderMarkdown","Blob","addEventListener","ev","detail","doc","innerHTML","Response","text","$e","showOpenFilePicker","window","types","description","accept","multiple","getFile","requestFileAccess","element","box","style","setProperty","Math","min","inlineSize","preventDefault","dataTransfer","files","preload","requestIdleCallback","hash","string","hashBuffer","crypto","subtle","digest","TextEncoder","encode","btoa","String","fromCharCode","Uint8Array","loadStyleSheet","inline","base","integrity","createObjectURL","HTMLLinkElement","I","H","setAttribute","setStyleURL","preInit","styles","initialize","rootElement","document","head","$integrity","PLACE","querySelector","HTMLHeadElement","createElement","rel","crossOrigin","dataset","owner","loadBlobStyle","appendChild","loadInlineStyle","root","OpenSans","FontFace","OpenSansItalic","SourceSans3","SourceSansItalic3","fonts","add","loadingModules","Promise","allSettled","CSS","mds","map","rs","try","default","renderInPage","whenError","matches","classList","whenLoad","remove","documentElement","mut","addedNodes","forEach","el","complete"],"mappings":"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"}